
switch:

    ####################################################
    #                                                  #
    #                     TEMPLATE                     #
    #                                                  #
    ####################################################

  - platform: template
    switches:
      computer_imac:
        friendly_name: Dator
        icon_template: custom:imac-alternative
        value_template: "{{ is_state('switch.wol_imac', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.computer_imac
          - service: shell_command.imac_switchbot_rpi
          - service: light.turn_on
            entity_id: light.datorlampa
        turn_off:
          - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.computer_lock
                  state: 'on'
              sequence:
                - service: browser_mod.toast
                  data:
                    duration: 8000
                    message: Dator är låst från att stängas av...
            default:
              - service: input_boolean.turn_on
                entity_id: input_boolean.computer_imac
              - service: shell_command.imac_off

      wohnzimmer_tv:
        friendly_name: Tv
        icon_template: custom:tv
        value_template: "{{ is_state('media_player.wohnzimmer_tv', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.wohnzimmer_tv
          - service: switch.turn_on
            entity_id: switch.eg_wohnzimmer_harmonyhub_fernsehen

        turn_off:
          - service: input_boolean.turn_on
            entity_id: input_boolean.wohnzimmer_tv
          - service: remote.turn_off
            entity_id: remote.eg_wohnzimmer_harmonyhub

      tv_samsung:
        friendly_name: "Tv\u00B2"
        icon_template: custom:tv
        value_template: "{{ is_state('media_player.samsung_tv_remote', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.samsung_tv_remote
          - service: remote.send_command
            data:
              entity_id: remote.sovrum
              command: menu
        turn_off:
          - service: input_boolean.turn_on
            entity_id: input_boolean.samsung_tv_remote
          - service: media_player.turn_off
            entity_id: media_player.samsung_tv_remote

      playstation_5:
        friendly_name: Playstation
        icon_template: mdi:sony-playstation
        value_template: "{{ states('sensor.playstation') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.playstation_5
          - service: shell_command.wake_ps5
          - service: media_player.turn_on
            entity_id: media_player.sony_bravia
          - repeat:
              count: 10
              # report state
              sequence:
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: sensor.playstation
                      state: 'on'
                - delay:
                    seconds: 2
                - service: homeassistant.update_entity
                  entity_id: sensor.playstation
        turn_off:
          - service: input_boolean.turn_on
            entity_id: input_boolean.playstation_5
          - service: media_player.turn_off
            entity_id: media_player.sony_bravia
          - service: homeassistant.update_entity
            entity_id: sensor.playstation

      dashboard_screensaver:
        friendly_name: Skärmsläckare
        icon_template: mdi:power-sleep
        value_template: "{{ is_state_attr('sensor.fullykiosk', 'isInScreensaver', true) }}"
        turn_on:
          - service: shell_command.fullykiosk_screensaver_on
        turn_off:
          - service: shell_command.fullykiosk_screensaver_off

      air_purifier:
        friendly_name: Luftrenare
        value_template: "{{ is_state('binary_sensor.gosund_air_purifier', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.air_purifier
          - service: remote.send_command
            data:
              entity_id: remote.broadlink
              command: 1
          - repeat:
              count: 20
              # report state
              sequence:
                - condition: state
                  entity_id: binary_sensor.gosund_air_purifier
                  state: 'off'
                - delay:
                    seconds: 1
                - service: mqtt.publish
                  data:
                    topic: cmnd/gosund2/status
                    payload: 10
        turn_off:
          - service: input_boolean.turn_on
            entity_id: input_boolean.air_purifier
          - service: remote.send_command
            data:
              entity_id: remote.broadlink
              command: 1
          - repeat:
              count: 30
              # report state
              sequence:
                - condition: state
                  entity_id: binary_sensor.gosund_air_purifier
                  state: 'on'
                - delay:
                    seconds: 1
                - service: mqtt.publish
                  data:
                    topic: cmnd/gosund2/status
                    payload: 10
